id: com.valvesoftware.Steam.CompatibilityTool.Proton
default-branch: stable
runtime: com.valvesoftware.Steam
runtime-version: stable
sdk: org.freedesktop.Sdk//22.08
build-extension: true
appstream-compose: false

sdk-extensions:
  - org.freedesktop.Sdk.Compat.i386
  - org.freedesktop.Sdk.Extension.toolchain-i386
  - org.freedesktop.Sdk.Extension.mingw-w64

build-options:
  prefix: /app/share/steam/compatibilitytools.d/Proton
  append-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton/bin
  ldflags: -L/app/share/steam/compatibilitytools.d/Proton/lib
  env:
    C_INCLUDE_PATH: /app/share/steam/compatibilitytools.d/Proton/include:/app/include
    CPLUS_INCLUDE_PATH: /app/share/steam/compatibilitytools.d/Proton/include:/app/include
    PKG_CONFIG_PATH: /app/share/steam/compatibilitytools.d/Proton/lib/pkgconfig:/app/lib/pkgconfig:/app/share/pkgconfig:/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/share/pkgconfig
    LD_RUN_PATH: /app/share/steam/compatibilitytools.d/Proton/lib
    PYTHONPATH: /app/share/steam/compatibilitytools.d/Proton/lib/python3.10/site-packages
    FLATPAK_LIBDIR: /app/share/steam/compatibilitytools.d/Proton/lib
    FLATPAK_LIBDIR_WINE: /app/share/steam/compatibilitytools.d/Proton/lib/wine
    FLATPAK_LIBDIR_WINE_ELF: /app/share/steam/compatibilitytools.d/Proton/lib/wine/x86_64-unix
    FLATPAK_LIBDIR_WINE_PE: /app/share/steam/compatibilitytools.d/Proton/lib/wine/x86_64-windows
  cflags: &optflags >-
    -O2
    -pipe
    -march=nocona
    -mtune=core-avx2
    -mfpmath=sse
    -fwrapv
    -fno-strict-aliasing
  cflags-override: true
  cxxflags: *optflags
  cxxflags-override: true

x-compat-i386-opts: &compat_i386_opts
  ldflags: -L/app/share/steam/compatibilitytools.d/Proton/lib32 -L/app/lib32
  prepend-path: /app/share/steam/compatibilitytools.d/Proton/bin32
  append-path: /usr/lib/sdk/toolchain-i386/bin
  env:
    CC: ccache i686-unknown-linux-gnu-gcc
    CXX: ccache i686-unknown-linux-gnu-g++
    PKG_CONFIG_PATH: /app/share/steam/compatibilitytools.d/Proton/lib32/pkgconfig:/app/lib32/pkgconfig:/app/share/pkgconfig:/usr/lib/i386-linux-gnu/pkgconfig:/usr/share/pkgconfig
    LD_RUN_PATH: /app/share/steam/compatibilitytools.d/Proton/lib32
    FLATPAK_LIBDIR: /app/share/steam/compatibilitytools.d/Proton/lib32
    FLATPAK_LIBDIR_WINE: /app/share/steam/compatibilitytools.d/Proton/lib32/wine
    FLATPAK_LIBDIR_WINE_ELF: /app/share/steam/compatibilitytools.d/Proton/lib32/wine/i386-unix
    FLATPAK_LIBDIR_WINE_PE: &lib32_wine_pe /app/share/steam/compatibilitytools.d/Proton/lib32/wine/i386-windows
  libdir: /app/share/steam/compatibilitytools.d/Proton/lib32
  cflags: &optflags32 >-
    -O2
    -pipe
    -march=nocona
    -mtune=core-avx2
    -mfpmath=sse
    -fwrapv
    -fno-strict-aliasing
    -mstackrealign

x-proton-source: &proton_source
  type: git
  url: https://github.com/ValveSoftware/Proton.git
  tag: proton-8.0-4
  commit: 01c366c0f84417c5614a8d6a70a9c18d32450566
  disable-submodules: true
  x-checker-data:
    type: json
    url: https://api.github.com/repos/ValveSoftware/Proton/git/refs/tags/proton-
    tag-query: >-
      map(select(.ref | match("refs/tags/proton-[0-9].*"; ""))) | last |
      if .object.type=="commit" then . else error("not a commit") end |
      .ref | sub("^refs/tags/"; "")
    version-query: >-
      $tag | sub("^proton-"; "")
    commit-query: >-
      map(select(.ref | match("refs/tags/proton-[0-9].*"; ""))) | last |
      .object.sha
    timestamp-data-url: >-
      map(select(.ref | match("refs/tags/proton-[0-9].*"; ""))) | last |
      .object.url
    timestamp-query: >-
      .committer.date
    is-main-source: true
    source-id: proton-git-0

x-wine-source: &wine_source
  type: archive
  dest: wine
  url: https://github.com/ValveSoftware/wine/archive/66cd5c1c1f1cae4c76e74c5e82d7b4f1fa4d7550/wine.zip
  sha256: 044eee401b0ae9d35f36ccb46e02d07719fe0f2c352f68d4150a974aa955c778

#x-dxvk-source: &dxvk_source
#  type: archive
#  dest: dxvk
#  url: https://github.com/ValveSoftware/dxvk/archive/83dc4678df7657821992a927d4aeee510fafa224/dxvk.zip
#  sha256: 291deb01debd25bd1b141f824857a30b3a92f974059f87e09301b7cd8d9eaa37

x-dxvk-source: &dxvk_source
  type: git
  dest: dxvk
  url: https://github.com/ValveSoftware/dxvk
  commit: 83dc4678df7657821992a927d4aeee510fafa224

x-openvr-source: &openvr_source
  type: archive
  dest: openvr
  url: https://github.com/ValveSoftware/openvr/archive/08de3821dfd3aa46f778376680c68f33b9fdcb6c/openvr.zip
  sha256: f57d93d31618fd2921912c8e51925e77910fdfb8961d8777a757f942557527ba

x-fonts-lf-source: &fonts_lf_source
  type: archive
  dest: fonts/liberation-fonts
  url: https://github.com/liberationfonts/liberation-fonts/archive/4b0192046158094654e865245832c66d2104219e/liberation-fonts.zip
  sha256: bf174cd4c6358121726a2f326de26716ed652cb6a46f05a55a42743fdf4355cf

x-gstreamer-source: &gstreamer_source
  type: archive
  dest: gstreamer
  url: https://github.com/GStreamer/gstreamer/archive/bf6ce1d64a0697e7910826147b48f8f658366a5a/gstreamer.zip
  sha256: 5e84a2c842405c95c7510d0e55b53458c8d5129fd7d45a481448ea8c708a8902

x-orc-source: &orc_source
  type: archive
  dest: gst-orc
  url: https://github.com/GStreamer/orc/archive/7d5bbada3f1c6cf34182abccf47a34d79b83fa97.zip
  sha256: 601f65e3c4d09d0b2932822a24fa253ba524f1b34dda9a8b48f4e16ca47cc893

#x-vkd3d-proton-source: &vkd3d_proton_source
#  type: archive
#  dest: vkd3d-proton
#  url: https://github.com/HansKristian-Work/vkd3d-proton/archive/88e4f300cc0b5b6f0880c1233d562cf506b546fb.zip
#  sha256: cb636a0a53e50cbd27b5c311c7cf43ef1de98e1e54a2e62e507ceae1d1de72db

x-vkd3d-proton-source: &vkd3d_proton_source
  type: git
  dest: vkd3d-proton
  url: https://github.com/HansKristian-Work/vkd3d-proton
  commit: 88e4f300cc0b5b6f0880c1233d562cf506b546fb

x-oxr-sdk-source: &oxr_sdk_source
  type: archive
  dest: OpenXR-SDK
  url: https://github.com/KhronosGroup/OpenXR-SDK/archive/58a00cf85c39ad5ec4dc43a769624e420c06179a/OpenXR-SDK.zip
  sha256: 1be2c400f267ed8fb9d36a4d7f79c6059be9e09b7f649a249a71b51cb2d7b63a

#x-dxvk-nvapi-source: &dxvk_nvapi_source
#  type: archive
#  dest: dxvk-nvapi
#  url: https://github.com/jp7677/dxvk-nvapi/archive/6c5ed18b4b715e49aa8c4ca21c3737113aa90ec9/dxvk-nvapi.zip
#  sha256: 283cbad40e311385ec57f23201f25203cf3d38afab40e39a183afc6735bed615

x-dxvk-nvapi-source: &dxvk_nvapi_source
  type: git
  dest: dxvk-nvapi
  url: https://github.com/jp7677/dxvk-nvapi
  commit: 6c5ed18b4b715e49aa8c4ca21c3737113aa90ec9

x-vkd3d-source: &vkd3d_source
  type: archive
  dest: vkd3d
  url: https://github.com/ValveSoftware/vkd3d/archive/a16b9dffda9becb1dbcad476c38b78f2144f35b4/vkd3d.zip
  sha256: 1bce2ae26acee8b9112a4f024ea197a81145b7f501217c35ccebb4388961bbfc

x-vulkan-headers-source: &vulkan_headers_source
  type: archive
  dest: Vulkan-Headers
  url: https://github.com/KhronosGroup/Vulkan-Headers/archive/8c1c27d5a9b9de8a17f500053bd08c7ca6bba19c/Vulkan-Headers.zip
  sha256: c72ce4101a4015e331b9e4de07b58e23c2e69365799b44e424dc999f9e129297

x-spirv-headers-source: &spirv_headers_source
  type: archive
  dest: SPIRV-Headers
  url: https://github.com/KhronosGroup/SPIRV-Headers/archive/6cae8216a6ea19ff3f237af01e54378c1ff81fcd/SPIRV-Headers.zip
  sha256: 4f1c3f1b6fb6fb42292dcebe42dda7f655833fe472b5d29d9ab9c811bf41710d

x-vulkan-loader-source: &vulkan_loader_source
  type: archive
  dest: Vulkan-Loader
  url: https://github.com/KhronosGroup/Vulkan-Loader/archive/538b2676eaac29565e4f1034a6f8a59ce158213d/Vulkan-Loader.zip
  sha256: c107ad0dfd7415a34692392a7826813569e2301921cb4b3b9bc65a81d942742b

x-ffmpeg-source: &ffmpeg_source
  type: archive
  dest: ffmpeg
  url: https://github.com/FFmpeg/FFmpeg/archive/a77521cd5d27e955b16e8097eecefc779ffdcb6d/ffmpeg.zip
  sha256: 4f3c484c078199c0b5369f4bc5f35a2b62215b68cbab32cbdfec909006bef251

x-dav1d-source: &dav1d_source
  type: archive
  dest: dav1d
  url: https://github.com/videolan/dav1d/archive/8a6f054ef1e0f7886bc6e53e6be97c427154fe85/dav1d.zip
  sha256: ccd660bc0ba55938ed2531d03012181939dc35cc2a627618cb95e7730eaa12d4

x-gst-plugins-rs-source: &gst_plugins_rs_source
  type: archive
  dest: gst-plugins-rs
  url: https://github.com/sdroege/gst-plugin-rs/archive/0205aa43d6d8c5d0c9d4e4f83e0a3aaa94acef89/gst-plugins-rs.zip
  sha256: c91326aacfb32279c482a1c97ab9ffbb65d6f05e8a090a702fb38371319a78da

x-graphene-source: &graphene_source
  type: archive
  dest: graphene
  url: https://github.com/ebassi/graphene/archive/4e2578450809c2099400cf85caf18eafcd7100aa/graphene.zip
  sha256: 3d605010c42a7b3d40a8c456d8bdebb79c69c741bd2b2b3d93d4333f840077cd

x-glslang-source: &glslang_source
  type: archive
  dest: glslang
  url: https://github.com/KhronosGroup/glslang/archive/df7fec2cfa966919172ee83bfcae6c9c9b3f91b8/glslang.zip
  sha256: 6c72910a7fb897a64d23d5d0ad5dccaa0e73a79576412af541ff0f05dabed7fe

x-proton-sources: &proton_sources
  - *proton_source
  - *wine_source
  - *dxvk_source
  - *openvr_source
  - *fonts_lf_source
  - *gstreamer_source
  - *orc_source
  - *vkd3d_proton_source
  - *oxr_sdk_source
  - *dxvk_nvapi_source
  - *vkd3d_source
  - *vulkan_headers_source
  - *spirv_headers_source
  - *vulkan_loader_source
  - *ffmpeg_source
  - *dav1d_source
  - *gst_plugins_rs_source
  - *graphene_source
  - *glslang_source

cleanup:
  - '*.a'
  - '*.la'
  - /include
  - /lib/pkgconfig
  - /lib32/pkgconfig
  - /lib/cmake
  - /lib32/cmake
  - /share/man

  - /bin/function_grep.pl
  - /bin/widl
  - /bin/winebuild
  - /bin/winecpp
  - /bin/winedump
  - /bin/wineg++
  - /bin/winegcc
  - /bin/winemaker
  - /bin/wmc
  - /bin/wrc

  - /lib/wine/*.def
  - /lib32/wine/*.def
modules:

  - name: Vulkan-Headers
    subdir: Vulkan-Headers
    buildsystem: cmake-ninja
    sources: *proton_sources


  - name: SPIRV-Headers
    subdir: SPIRV-Headers
    buildsystem: cmake-ninja
    sources: *proton_sources


  - name: wine
    subdir: wine
    build-options:
      arch:
        x86_64:
          config-opts:
            - --enable-win64
            - --with-mingw=ccache x86_64-w64-mingw32-gcc
          libdir: /app/share/steam/compatibilitytools.d/Proton/lib
    config-opts: &wine_common_opts
      - --disable-win16
      - --disable-tests
      - --with-x
      - --with-pulse
      - --with-dbus
      - --without-hal
      - --without-oss
      #FIXME remove once vkd3d is removed from Steam bundle
      - --without-vkd3d
    make-install-args: &wine_common_make_install_args
      - LDCONFIG=/bin/true
      - UPDATE_DESKTOP_DATABASE=/bin/true
      - INSTALL_PROGRAM_FLAGS=-s
    sources: &wine_sources
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - type: shell
        dest: wine
        commands:
          - autoreconf -fiv
      - &wine-source-winevulkan
        type: shell
        dest: wine
        commands:
          - tools/make_requests
          - dlls/winevulkan/make_vulkan --xml vk.xml

  - name: wine-32bit
    subdir: wine
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --bindir=/app/share/steam/compatibilitytools.d/Proton/bin32
        - --with-mingw=ccache i686-w64-mingw32-gcc
    config-opts: *wine_common_opts
    make-install-args: *wine_common_make_install_args
    post-install:
      - mv $FLATPAK_DEST/bin32/{wine,wine-preloader} $FLATPAK_DEST/bin/
    cleanup:
      - /bin32
    sources: *wine_sources


  - name: lsteamclient
    subdir: lsteamclient
    config-opts: &lsteamclient_config_opts
      - --nosource-fix
      - --nolower-include
      - --nodlls
      - --nomsvcrt
      - -L${FLATPAK_LIBDIR}
      - -L${FLATPAK_LIBDIR_WINE_ELF}
      - -I${FLATPAK_DEST}/include
      - -I${FLATPAK_DEST}/include/wine
      - -I${FLATPAK_DEST}/include/wine/windows
      - -I../wine/include
      - -DSTEAM_API_EXPORTS
      - -Dprivate=public
      - -Dprotected=public
      - --dll
      - .
    make-args:
      - LIBRARIES=-ldl
    build-commands:
      - winebuild --dll --fake-module -E lsteamclient.spec -o lsteamclient.dll.fake
    no-make-install: true
    post-install: &lsteamclient-post-install
      - install -Dm755 lsteamclient.dll.so ${FLATPAK_LIBDIR_WINE_ELF}/lsteamclient.dll.so
      - install -Dm755 lsteamclient.dll.fake ${FLATPAK_LIBDIR_WINE_PE}/lsteamclient.dll
    sources: &lsteamclient_sources
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - type: file
        path: winemaker-configure.sh
        dest: lsteamclient
        dest-filename: configure

  - name: lsteamclient-32bit
    subdir: lsteamclient
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      cxxflags: -Wno-attributes
      config-opts:
        - --wine32
      make-args: &winemaker_m32_make_args
        - CC=winegcc -m32
        - CXX=wineg++ -m32
    config-opts: *lsteamclient_config_opts
    make-args:
      - LIBRARIES=-ldl
    build-commands:
      - winebuild --dll --fake-module -E lsteamclient.spec -o lsteamclient.dll.fake
    no-make-install: true
    post-install: *lsteamclient-post-install
    sources: *lsteamclient_sources


  - name: libsteam_api-bin
    #WARNING proprietary
    build-options:
      strip: false
      no-debuginfo: true
    subdir: steam_helper
    buildsystem: simple
    build-commands:
      - install -Dm755 64/libsteam_api.so -t ${FLATPAK_DEST}/lib/
      - install -Dm755 32/libsteam_api.so -t ${FLATPAK_DEST}/lib32/
    sources:
      - *proton_source


  - name: steam_helper
    subdir: steam_helper
    config-opts: &steam_helper-config-opts
      - --nosource-fix
      - --nolower-include
      - --nodlls
      - --nomsvcrt
      - -L${FLATPAK_LIBDIR}
      - -L${FLATPAK_LIBDIR_WINE_ELF}
      - -I${FLATPAK_DEST}/include
      - -I${FLATPAK_DEST}/include/wine
      - -I${FLATPAK_DEST}/include/wine/windows
      - -I../lsteamclient/steamworks_sdk_142
      - -I../wine/include
      - -I../openvr/headers
      - -lsteam_api
      - -lshlwapi
      - -lmsi
      - -lole32
      - -ldl
      - --guiexe
      - .
    build-commands:
      - winebuild --exe --fake-module -F steam -o steam.exe.fake
    no-make-install: true
    post-install: &steam_helper-post-install
      - install -Dm755 steam_helper.exe.so ${FLATPAK_LIBDIR_WINE_ELF}/steam.exe.so
      - install -Dm755 steam.exe.fake ${FLATPAK_LIBDIR_WINE_PE}/steam.exe
    sources: &steam_helper-sources
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - *wine-source-winevulkan
      - type: file
        path: winemaker-configure.sh
        dest: steam_helper
        dest-filename: configure

  - name: steam_helper-32bit
    subdir: steam_helper
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --wine32
      make-args: *winemaker_m32_make_args
    config-opts: *steam_helper-config-opts
    build-commands:
      - winebuild --exe --fake-module -F steam -o steam.exe.fake
    no-make-install: true
    post-install: *steam_helper-post-install
    sources: *steam_helper-sources


  - name: openvr
    subdir: openvr
    buildsystem: simple
    build-commands:
      - install -Dm755 bin/win64/openvr_api.dll ${FLATPAK_DEST}/lib/wine/dxvk/openvr_api_dxvk.dll
      - install -Dm755 bin/win32/openvr_api.dll ${FLATPAK_DEST}/lib32/wine/dxvk/openvr_api_dxvk.dll
    sources:
      - *proton_source
      - *openvr_source


  - name: vrclient
    subdir: vrclient_x64/vrclient_x64
    config-opts: &vrclient_config_opts
      - --nosource-fix
      - --nolower-include
      - --nodlls
      - --nomsvcrt
      - -L${FLATPAK_LIBDIR}
      - -L${FLATPAK_LIBDIR_WINE_ELF}
      - -I${FLATPAK_DEST}/include
      - -I${FLATPAK_DEST}/include/wine
      - -I${FLATPAK_DEST}/include/wine/windows
      - -I../../wine/include
      - -I../../wine/include/wine
      - -I.
      - -I..
      - --dll
      - .
    make-args:
      - LIBRARIES=-ldl
    build-commands:
      - winebuild --dll --fake-module -E vrclient_x64.spec -o vrclient_x64.dll.fake
    no-make-install: true
    post-install:
      - install -Dm755 vrclient_x64.dll.so ${FLATPAK_LIBDIR_WINE_ELF}/vrclient_x64.dll.so
      - install -Dm755 vrclient_x64.dll.fake ${FLATPAK_LIBDIR_WINE_PE}/vrclient_x64.dll
    sources: &vrclient_sources
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - type: file
        path: winemaker-configure.sh
        dest: vrclient_x64/vrclient_x64
        dest-filename: configure

  - name: vrclient-32bit
    subdir: vrclient_x64/vrclient_x64
    only-arches:
      - x86_64
    build-options:
      arch:
        x86_64: *compat_i386_opts
      config-opts:
        - --wine32
      make-args: *winemaker_m32_make_args
    make-args:
      - LIBRARIES=-ldl
    config-opts: *vrclient_config_opts
    build-commands:
      - winebuild --dll --fake-module -E vrclient_x64.spec -o vrclient_x64.dll.fake
    no-make-install: true
    post-install:
      - install -Dm755 vrclient_x64.dll.so ${FLATPAK_LIBDIR_WINE_ELF}/vrclient.dll.so
      - install -Dm755 vrclient_x64.dll.fake ${FLATPAK_LIBDIR_WINE_PE}/vrclient.dll
    sources: *vrclient_sources


  - name: wineopenxr
    subdir: wineopenxr
    config-opts:
      - --nosource-fix
      - --nolower-include
      - --nodlls
      - --nomsvcrt
      - -L${FLATPAK_LIBDIR}
      - -L${FLATPAK_LIBDIR_WINE_ELF}
      - -I${FLATPAK_DEST}/include
      - -I${FLATPAK_DEST}/include/wine
      - -I${FLATPAK_DEST}/include/wine/windows
      - -I../wine/include
      - -lopenxr_loader
      - -ldxgi
      - -lvulkan
      - -ldl
      - --dll
      - .
    build-commands:
      - winebuild --dll --fake-module -E wineopenxr.spec -o wineopenxr.dll.fake
    no-make-install: true
    post-install:
      - install -Dm755 wineopenxr.dll.so -t ${FLATPAK_LIBDIR_WINE_ELF}/
      - install -Dm755 wineopenxr.dll.fake ${FLATPAK_LIBDIR_WINE_PE}/wineopenxr.dll
    sources:
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - *wine-source-winevulkan
      - type: file
        path: winemaker-configure.sh
        dest: wineopenxr
        dest-filename: configure
    modules:

      - name: openxr
        subdir: OpenXR-SDK
        buildsystem: cmake-ninja
        config-opts:
          # FIXME: Make a proper patch instead to build with std::filesystem
          - -DBUILD_WITH_STD_FILESYSTEM=OFF
        sources: *proton_sources


  - name: glslang
    buildsystem: cmake-ninja
    cleanup:
      - '*'
    sources:
      - type: archive
        url: https://github.com/KhronosGroup/glslang/archive/refs/tags/11.12.0.tar.gz
        sha256: 7795a97450fecd9779f3d821858fbc2d1a3bf1dd602617d95b685ccbcabc302f


# TODO: build vkd3d against cross-compiled Vulkan-Loader instead of Wine vulkan lib


  - name: vkd3d
    subdir: vkd3d
    build-options:
      ldflags: >-
        -L/run/build/vkd3d/wine/dlls/vulkan-1
      ldflags-override: true
      config-opts:
        - --host=x86_64-w64-mingw32
      env:
        CC: ccache x86_64-w64-mingw32-gcc
        LD: x86_64-w64-mingw32-ld
      prefix: /app/share/steam/compatibilitytools.d/Proton/lib/vkd3d/prefix
    config-opts: &vkd3d-config-opts
      - --enable-silent-rules
      - --disable-doxygen-doc
      - --disable-tests
      - --disable-demos
      - --without-ncurses
    post-install:
      - mv -v ${FLATPAK_DEST}/lib/vkd3d/{prefix/bin/,}libvkd3d-1.dll
      - mv -v ${FLATPAK_DEST}/lib/vkd3d/{prefix/bin/,}libvkd3d-shader-1.dll
    sources: &vkd3d-sources
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - type: shell
        commands:
          - install -D $FLATPAK_LIBDIR_WINE_PE/vulkan-1.dll -t wine/dlls/vulkan-1/
    cleanup:
      - /lib/vkd3d/prefix

  - name: vkd3d-32bit
    subdir: vkd3d
    build-options:
      ldflags: >-
        -L/run/build/vkd3d-32bit/wine/dlls/vulkan-1
      ldflags-override: true
      config-opts:
        - --host=i686-w64-mingw32
      env:
        CC: ccache i686-w64-mingw32-gcc
        LD: i686-w64-mingw32-ld
        # XXX: build-options.arch.*.env overrides build-options.env
        # so we can't easily use compat_i386_opts anchor here
        FLATPAK_LIBDIR_WINE_PE: *lib32_wine_pe
      prefix: /app/share/steam/compatibilitytools.d/Proton/lib32/vkd3d/prefix
    config-opts: *vkd3d-config-opts
    post-install:
      - mv -v ${FLATPAK_DEST}/lib32/vkd3d/{prefix/bin/,}libvkd3d-1.dll
      - mv -v ${FLATPAK_DEST}/lib32/vkd3d/{prefix/bin/,}libvkd3d-shader-1.dll
    sources: *vkd3d-sources
    cleanup:
      - /lib32/vkd3d/prefix


  - name: vkd3d-proton
    subdir: vkd3d-proton
    buildsystem: meson
    build-options:
      ldflags: &mingw-ldflags ''
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win64.txt
        - --cross-file=../meson-ccache-mingw64.txt
        - --libdir=lib/wine/vkd3d-proton
        - --bindir=lib/wine/vkd3d-proton
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton/bin
    config-opts: &vkd3d-proton-config-opts
      - --buildtype=release
      - --strip
    post-install:
      - cd ${FLATPAK_BUILDER_BUILDDIR}; git submodule status -- vkd3d-proton > ${FLATPAK_DEST}/lib/wine/vkd3d-proton/version
    sources: &vkd3d-proton-sources
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - type: file
        dest: vkd3d-proton
        path: meson-ccache-mingw32.txt
      - type: file
        dest: vkd3d-proton
        path: meson-ccache-mingw64.txt

  - name: vkd3d-proton-32bit
    subdir: vkd3d-proton
    buildsystem: meson
    build-options:
      ldflags: *mingw-ldflags
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win32.txt
        - --cross-file=../meson-ccache-mingw32.txt
        - --libdir=lib32/wine/vkd3d-proton
        - --bindir=lib32/wine/vkd3d-proton
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton/bin
    config-opts: *vkd3d-proton-config-opts
    post-install:
      - cd ${FLATPAK_BUILDER_BUILDDIR}; git submodule status -- vkd3d-proton > ${FLATPAK_DEST}/lib32/wine/vkd3d-proton/version
    sources: *vkd3d-proton-sources


  - name: dxvk
    subdir: dxvk
    buildsystem: meson
    build-options:
      ldflags: *mingw-ldflags
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win64.txt
        - --cross-file=../meson-ccache-mingw64.txt
        - --libdir=lib/wine/dxvk
        - --bindir=lib/wine/dxvk
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton/bin
    config-opts: &dxvk_config_opts
      - --buildtype=release
      - --strip
      - -Denable_dxgi=true
      - -Denable_d3d9=true
      - -Denable_d3d10=true
      - -Denable_d3d11=true
    post-install:
      - cd ${FLATPAK_BUILDER_BUILDDIR}; git submodule status -- dxvk > ${FLATPAK_DEST}/lib/wine/dxvk/version
      - ln -s version ${FLATPAK_DEST}/lib/wine/dxvk/d9vk_version
    sources: &dxvk_sources
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - type: file
        dest: dxvk
        path: meson-ccache-mingw32.txt
      - type: file
        dest: dxvk
        path: meson-ccache-mingw64.txt

  - name: dxvk-32bit
    subdir: dxvk
    buildsystem: meson
    build-options:
      ldflags: *mingw-ldflags
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win32.txt
        - --cross-file=../meson-ccache-mingw32.txt
        - --libdir=lib32/wine/dxvk
        - --bindir=lib32/wine/dxvk
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton/bin
    config-opts: *dxvk_config_opts
    post-install:
      - cd ${FLATPAK_BUILDER_BUILDDIR}; git submodule status -- dxvk > ${FLATPAK_DEST}/lib32/wine/dxvk/version
      - ln -s version ${FLATPAK_DEST}/lib32/wine/dxvk/d9vk_version
    sources: *dxvk_sources


  - name: dxvk-nvapi
    subdir: dxvk-nvapi
    buildsystem: meson
    build-options:
      ldflags: ''
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win64.txt
        - --cross-file=../meson-ccache-mingw64.txt
        - --libdir=lib/wine/nvapi
        - --bindir=lib/wine/nvapi
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-Exp/bin
    config-opts: &dxvk_nvapi_config_opts
      - --buildtype=release
      - --strip
    post-install:
      - cd ${FLATPAK_BUILDER_BUILDDIR}; git submodule status -- dxvk-nvapi > ${FLATPAK_DEST}/lib/wine/nvapi/version
    sources: &dxvk_nvapi_sources
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - type: file
        dest: dxvk-nvapi
        path: meson-ccache-mingw32.txt
      - type: file
        dest: dxvk-nvapi
        path: meson-ccache-mingw64.txt

  - name: dxvk-nvapi-32bit
    subdir: dxvk-nvapi
    buildsystem: meson
    build-options:
      ldflags: ''
      ldflags-override: true
      config-opts:
        - --cross-file=../build-win32.txt
        - --cross-file=../meson-ccache-mingw32.txt
        - --libdir=lib32/wine/nvapi
        - --bindir=lib32/wine/nvapi
      prepend-path: /usr/lib/sdk/mingw-w64/bin:/app/share/steam/compatibilitytools.d/Proton-Exp/bin
    config-opts: *dxvk_nvapi_config_opts
    post-install:
      - cd ${FLATPAK_BUILDER_BUILDDIR}; git submodule status -- dxvk-nvapi > ${FLATPAK_DEST}/lib32/wine/nvapi/version
    sources: *dxvk_nvapi_sources


  - name: wine-mono-bin
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/wine/mono
      - cp -a wine-mono-*/ ${FLATPAK_DEST}/share/wine/mono/
    sources:
      - type: archive
        url: https://github.com/madewokherd/wine-mono/releases/download/wine-mono-8.0.1/wine-mono-8.0.1-x86.tar.xz
        sha256: 83f65c9292137a740c4b8ea730b61cee0dbbb82e4eb3607590ba2f4377827464
        strip-components: 0
        x-checker-data:
          type: html
          parent-id: proton-git-0
          url: https://github.com/ValveSoftware/Proton/raw/$parent_tag/Makefile.in
          version-pattern: WINEMONO_VER\s+:=\s+(\d+\.\d+\.\d+)
          url-template: https://github.com/madewokherd/wine-mono/releases/download/wine-mono-$version/wine-mono-$version-x86.tar.xz


  - name: wine-gecko-bin
    buildsystem: simple
    build-commands:
      - mkdir -p ${FLATPAK_DEST}/share/wine/gecko
      - |
        for a in wine-gecko-*-x86{,_64}.tar.xz; do
          tar -xf "$a" -C ${FLATPAK_DEST}/share/wine/gecko/
        done
    sources:
      - type: file
        url: https://dl.winehq.org/wine/wine-gecko/2.47.3/wine-gecko-2.47.3-x86.tar.xz
        sha256: 08d318f3dd6440a8a777cf044ccab039b0d9c8809991d2180eb3c9f903135db3
        x-checker-data:
          type: html
          parent-id: proton-git-0
          url: https://github.com/ValveSoftware/Proton/raw/$parent_tag/Makefile.in
          version-pattern: GECKO_VER\s+:=\s+(\d+\.\d+\.\d+)
          url-template: https://dl.winehq.org/wine/wine-gecko/$version/wine-gecko-$version-x86.tar.xz
      - type: file
        url: https://dl.winehq.org/wine/wine-gecko/2.47.3/wine-gecko-2.47.3-x86_64.tar.xz
        sha256: 0beac419c20ee2e68a1227b6e3fa8d59fec0274ed5e82d0da38613184716ef75
        x-checker-data:
          type: html
          parent-id: proton-git-0
          url: https://github.com/ValveSoftware/Proton/raw/$parent_tag/Makefile.in
          version-pattern: GECKO_VER\s+:=\s+(\d+\.\d+\.\d+)
          url-template: https://dl.winehq.org/wine/wine-gecko/$version/wine-gecko-$version-x86_64.tar.xz


  - name: fonts
    buildsystem: simple
    build-commands:
      - make -f Makefile.in "CURDIR=$(pwd)" "SRCDIR=$(pwd)" BUILD_NAME=proton-flatpak CONTAINER=1 fonts
      - >-
          find obj-fonts/
          -xtype f \( -name "*.otf" -o -name "*.ttf" \)
          -ls -exec install -Dm0644 -t ${FLATPAK_DEST}/share/fonts/ {} \;
    sources: *proton_sources
    modules:

      - name: fontforge
        buildsystem: cmake-ninja
        builddir: true
        config-opts:
          - -DCMAKE_BUILD_TYPE=Release
          - -DBUILD_SHARED_LIBS=OFF
          - -DENABLE_GUI=OFF
          - -DENABLE_NATIVE_SCRIPTING=ON
          - -DENABLE_PYTHON_SCRIPTING=OFF
          - -DENABLE_PYTHON_EXTENSION=OFF
          - -DENABLE_LIBSPIRO=OFF
          - -DENABLE_LIBUNINAMESLIST=OFF
          - -DENABLE_LIBGIF=OFF
          - -DENABLE_LIBJPEG=OFF
          - -DENABLE_LIBPNG=OFF
          - -DENABLE_LIBREADLINE=OFF
          - -DENABLE_LIBTIFF=OFF
          - -DENABLE_WOFF2=OFF
          - -DENABLE_DOCS=OFF
        cleanup:
          - '*'
        sources:
          - type: archive
            url: https://github.com/fontforge/fontforge/releases/download/20201107/fontforge-20201107.tar.xz
            sha256: 68bcba8f602819eddc29cd356ee13fafbad7a80d19b652d354c6791343476c78

      - files/afdko/python3-requirements-dev.json
      - files/afdko/python3-requirements.json

      - name: afdko-script
        buildsystem: simple
        build-commands:
          - install -Dm755 -t ${FLATPAK_DEST}/bin afdko
        sources:
          - type: script
            dest-filename: afdko
            commands:
              - exec "$@"

      - name: rsync
        config-opts:
          - --disable-xxhash
        cleanup:
          - '*'
        sources:
          - type: archive
            url: https://www.samba.org/ftp/rsync/src/rsync-3.2.3.tar.gz
            sha256: becc3c504ceea499f4167a260040ccf4d9f2ef9499ad5683c179a697146ce50e


  - name: default-prefix
    build-options:
      env:
        WINEPREFIX: /app/share/steam/compatibilitytools.d/Proton/share/default_pfx
        LC_ALL: C
    buildsystem: simple
    build-commands:
      #FIXME unclever way to wait for all child procs
      - strace -e trace=none -f wine wineboot
    post-install:
      - install -Dm644 wineopenxr/wineopenxr64.json ${WINEPREFIX}/drive_c/openxr/wineopenxr64.json
    sources: *proton_sources


  - name: proton
    buildsystem: simple
    build-commands:
      - install -Dm755 -t ${FLATPAK_DEST}/ proton filelock.py user_settings.sample.py
      - install -Dm644 -t ${FLATPAK_DEST}/ compatibilitytool.vdf proton_3.7_tracked_files
      - cat toolmanifest_runtime.vdf | grep -Ev '("use_sessions"|"require_tool_appid"|"compatmanager_layer_name")' > toolmanifest_noruntime.vdf
      - install -Dm644 toolmanifest_noruntime.vdf ${FLATPAK_DEST}/toolmanifest.vdf
      - install -Dm644 dist.LICENSE ${FLATPAK_DEST}/LICENSE
      - |
        set -e -o pipefail
        PROTON_VERSION=$(git describe --tags | sed 's/^proton-//')
        PROTON_DATE=$(git show -s --format=%cs)
        TIMESTAMP=$(date +%s)
        echo ${TIMESTAMP} proton_flatpak-${PROTON_VERSION} > ${FLATPAK_DEST}/version
        sed \
          -e "s/@VERSION@/${PROTON_VERSION}/g" \
          -e "s/@BUILD@/${TIMESTAMP}/g" \
          -i ${FLATPAK_DEST}/compatibilitytool.vdf
      - |
        cd ${FLATPAK_DEST}
        mkdir dist
        ln -s ../bin dist/bin
        ln -s ../lib dist/lib64
        ln -s ../lib32 dist/lib
        ln -s ../share dist/share
        ln -s ../version dist/version
      - install -Dm644 -t ${FLATPAK_DEST}/share/metainfo ${FLATPAK_ID}.metainfo.xml
      - appstream-compose --basename=${FLATPAK_ID} --prefix=${FLATPAK_DEST} --origin=flatpak
        ${FLATPAK_ID}
    sources:
      - *proton_source
      - *wine_source
      - *dxvk_source
      - *openvr_source
      - *fonts_lf_source
      - *gstreamer_source
      - *orc_source
      - *vkd3d_proton_source
      - *oxr_sdk_source
      - *dxvk_nvapi_source
      - *vkd3d_source
      - *vulkan_headers_source
      - *spirv_headers_source
      - *vulkan_loader_source
      - *ffmpeg_source
      - *dav1d_source
      - *gst_plugins_rs_source
      - *graphene_source
      - *glslang_source
      - type: patch
        paths:
          - patches/proton/flatpak.patch
          - patches/proton/keep-system-gstreamer-plugins.patch
      - type: file
        path: compatibilitytool.vdf
      - type: file
        path: com.valvesoftware.Steam.CompatibilityTool.Proton.metainfo.xml
